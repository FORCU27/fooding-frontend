name: back-office-front-main-CI

on:
  push:
    branches: [main]
    tags: [back-office-front**]
    paths:
      - 'apps/back-office-front/**'
      - '_config/**'
      - '_package/**'
  workflow_dispatch:

jobs:
  docker:
    runs-on: ubuntu-latest
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.BUILD_SLACK_WEBHOOK_URL }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./apps/back-office-front/Dockerfile
          push: true
          tags: hyperrealitycorp/fooding-back-office-front-production
          platforms: linux/amd64, linux/arm64/v8
          build-args: |
            API_SERVER_URL=${{ secrets.API_SERVER_URL }}
            NEXT_PUBLIC_OAUTH_REDIRECT_URI=${{ secrets.BACK_OFFICE_NEXT_PUBLIC_OAUTH_REDIRECT_URI }}
            NEXT_PUBLIC_GOOGLE_CLIENT_ID=${{ secrets.BACK_OFFICE_NEXT_PUBLIC_GOOGLE_CLIENT_ID }}
            NEXT_PUBLIC_KAKAO_CLIENT_ID=${{ secrets.BACK_OFFICE_NEXT_PUBLIC_KAKAO_CLIENT_ID }}
            NEXT_PUBLIC_NAVER_CLIENT_ID=${{ secrets.BACK_OFFICE_NEXT_PUBLIC_NAVER_CLIENT_ID }}
            NEXT_PUBLIC_APPLE_CLIENT_ID=${{ secrets.BACK_OFFICE_NEXT_PUBLIC_APPLE_CLIENT_ID }}
      - name: Deployment
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_SSH_IP }}
          username: ${{ secrets.REMOTE_SSH_ID }}
          password: ${{ secrets.REMOTE_SSH_PASSWORD }}
          port: ${{ secrets.REMOTE_SSH_PORT }}
          script: |
            source ~/.bashrc
            bash ./deployment/fooding/back-office-front-production.sh
      - uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          channel: '#build-status'
        if: always()
